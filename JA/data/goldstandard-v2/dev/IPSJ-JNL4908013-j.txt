スケジューラとの協調によるプロセス優先度に基づくパケット受信処理手法
近年，ネットワークの通信帯域が増加し，複数のプロセスが同時にパケット受信を行う場合が増えてきた．多くのOSではプロセスの重要度に従った資源割当てを行うためにプロセス優先度を導入し，優先度が高いプロセスほど多くの資源を与える．よってパケット受信においても宛先プロセスの優先度に基づいた処理を期待するが，一般的なOSでは受信処理においてはプロセス優先度が考慮されておらず，すべてのパケットは平等に扱われてしまう．これによって複数のプロセスが同時に受信を行う場合に，高優先プロセスへのパケットよりも低優先プロセスへのパケット受信に多くの資源を割り当ててしまう可能性がある．これはシステムが高負荷の状態において特に問題となる．そこでこの問題を解決するため，本論文ではネットワークサブシステムとプロセススケジューラとが互いに情報を伝える受信処理手法<i>PacketFlow</i>を提案する．<i>PacketFlow</i>は早期段階でのパケットの選択破棄とソケットバッファ使用率の高いプロセスの優先度調整とを行うことで高優先プロセスのパケット受信数を増加させる．本手法をLinuxの上に実装し評価実験を行った結果，提案手法では受信処理において高優先プロセスのスループットおよび全体のスループットが向上していることが確認できた．
